import{_ as t,o as e,c as a,Q as o}from"./chunks/framework.5018bd8e.js";const b=JSON.parse('{"title":"updateLocalStorage","description":"","frontmatter":{},"headers":[],"relativePath":"storage-updateLocalStorage.md","filePath":"storage-updateLocalStorage.md"}'),r={name:"storage-updateLocalStorage.md"},d=o('<h1 id="updatelocalstorage" tabindex="-1">updateLocalStorage <a class="header-anchor" href="#updatelocalstorage" aria-label="Permalink to &quot;updateLocalStorage&quot;">​</a></h1><blockquote><p>Available since version (可用版本) 0.0.13</p></blockquote><blockquote><p><a href="https://github.com/Yakima-Teng/utils-daily/blob/master/src/storage/updateLocalStorage.ts" target="_blank" rel="noreferrer">Source code (源码)</a></p></blockquote><p>更新本地缓存</p><div class="tip custom-block"><p class="custom-block-title">Note (说明)</p><p>该方法会先尝试获取历史缓存，如果有则用新传入的对象对历史缓存结果进行merge操作，然后存入更新后的结果</p></div><h2 id="_1-params-入参" tabindex="-1">1. Params (入参) <a class="header-anchor" href="#_1-params-入参" aria-label="Permalink to &quot;1. Params (入参)&quot;">​</a></h2><table><thead><tr><th>Field (字段)</th><th>Type (类型)</th><th>Optional (可选)</th><th>Note (说明)</th></tr></thead><tbody><tr><td>key</td><td><code>string</code></td><td>必传</td><td>缓存key</td></tr><tr><td>val</td><td><code>object</code></td><td>必传</td><td>要更新的键值对</td></tr></tbody></table><h2 id="_2-return-返回" tabindex="-1">2. Return (返回) <a class="header-anchor" href="#_2-return-返回" aria-label="Permalink to &quot;2. Return (返回)&quot;">​</a></h2><table><thead><tr><th>Type (类型)</th><th>Note (说明)</th></tr></thead><tbody><tr><td><code>undefined</code></td><td></td></tr></tbody></table>',9),c=[d];function l(s,h,i,n,p,u){return e(),a("div",null,c)}const m=t(r,[["render",l]]);export{b as __pageData,m as default};
